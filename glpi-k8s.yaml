# Secret for MySQL credentials
apiVersion: v1
kind: Secret
metadata:
  name: mysql-credentials
type: Opaque
stringData:
  mysql-user: glpi
  mysql-password: glpi
  mysql-database: glpi
---
# PersistentVolumeClaim for GLPI storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: glpi-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# PersistentVolumeClaim for MySQL storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Deployment for GLPI
apiVersion: apps/v1
kind: Deployment
metadata:
  name: glpi
  labels:
    app: glpi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: glpi
  template:
    metadata:
      labels:
        app: glpi
    spec:
      containers:
      - name: glpi
        image: glpi/glpi:latest
        ports:
        - containerPort: 80
        env:
        - name: GLPI_DB_NAME
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: mysql-database
        - name: GLPI_DB_USER
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: mysql-user
        - name: GLPI_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: mysql-password
        - name: GLPI_DB_HOST
          value: "mysql" # Kubernetes Service name for MySQL
        volumeMounts:
        - name: glpi-data
          mountPath: /var/glpi
        readinessProbe:
          httpGet:
            path: / # Adjust if GLPI has a specific health check endpoint
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 10
      volumes:
      - name: glpi-data
        persistentVolumeClaim:
          claimName: glpi-data-pvc
---
# Service for GLPI
apiVersion: v1
kind: Service
metadata:
  name: glpi
spec:
  selector:
    app: glpi
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30080
  type: NodePort
---
# Deployment for MySQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:latest
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_RANDOM_ROOT_PASSWORD
          value: "yes"
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: mysql-database
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: mysql-password
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - 127.0.0.1
            - -u
            - $(MYSQL_USER)
            - --password=$(MYSQL_PASSWORD)
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 10
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - 127.0.0.1
            - -u
            - $(MYSQL_USER)
            - --password=$(MYSQL_PASSWORD)
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 10
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-data-pvc
---
# Service for MySQL
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
  type: ClusterIP